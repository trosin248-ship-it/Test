#!/bin/bash

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m'

print_header() {
    clear
    echo -e "${CYAN}"
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë               GIT MASTER FIXED              ‚ïë"  
    echo "‚ïë         –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è Windows           ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -e "${NC}"
}

show_info() {
    echo -e "${GREEN}–¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞:${NC} $(git branch --show-current 2>/dev/null || echo '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞')"
    echo -e "${GREEN}–¢–µ–∫—É—â–∞—è –ø–∞–ø–∫–∞:${NC} $(pwd)"
    echo ""
}

check_git_repo() {
    if ! git rev-parse --git-dir > /dev/null 2>&1; then
        echo -e "${RED}‚ùå –≠—Ç–æ –Ω–µ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π!${NC}"
        return 1
    fi
    return 0
}

# –£–ø—Ä–æ—â–µ–Ω–Ω—ã–µ –∏ –Ω–∞–¥–µ–∂–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
basic_operations() {
    while true; do
        echo -e "${YELLOW}=== –û–°–ù–û–í–ù–´–ï –û–ü–ï–†–ê–¶–ò–ò ===${NC}"
        echo "1. üìä –°—Ç–∞—Ç—É—Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
        echo "2. üìÅ –î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã"
        echo "3. üíæ –°–æ–∑–¥–∞—Ç—å –∫–æ–º–º–∏—Ç" 
        echo "4. üìú –ò—Å—Ç–æ—Ä–∏—è –∫–æ–º–º–∏—Ç–æ–≤"
        echo "5. üîÑ –°—Ä–∞–≤–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è (diff)"
        echo "6. üóëÔ∏è –û—Ç–º–µ–Ω–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤"
        echo "7. ‚Ü©Ô∏è –ù–∞–∑–∞–¥"
        
        read -p "–í—ã–±–µ—Ä–∏—Ç–µ: " choice
        
        case $choice in
            1) 
                git status
                ;;
            2) 
                echo "1. –î–æ–±–∞–≤–∏—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã"
                echo "2. –î–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ñ–∞–π–ª"
                read -p "–í—ã–±–µ—Ä–∏—Ç–µ: " add_choice
                case $add_choice in
                    1) 
                        git add .
                        echo -e "${GREEN}‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã!${NC}"
                        ;;
                    2) 
                        echo "–§–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ:"
                        ls -la | grep "^-" | head -10
                        read -p "–ò–º—è —Ñ–∞–π–ª–∞: " filename
                        git add "$filename"
                        echo -e "${GREEN}‚úÖ –§–∞–π–ª '$filename' –¥–æ–±–∞–≤–ª–µ–Ω!${NC}"
                        ;;
                esac
                ;;
            3)
                echo "–ò–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è –∫–æ–º–º–∏—Ç–∞:"
                git status --short
                read -p "–°–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞: " msg
                git commit -m "$msg"
                echo -e "${GREEN}‚úÖ –ö–æ–º–º–∏—Ç —Å–æ–∑–¥–∞–Ω!${NC}"
                ;;
            4)
                echo "1. –ö—Ä–∞—Ç–∫–∞—è –∏—Å—Ç–æ—Ä–∏—è (10 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö)"
                echo "2. –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è (5 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö)"
                read -p "–í—ã–±–µ—Ä–∏—Ç–µ: " hist_choice
                case $hist_choice in
                    1) git log --oneline -10 ;;
                    2) git log -5 ;;
                esac
                ;;
            5)
                git diff
                ;;
            6)
                echo "–î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:"
                git status --short
                read -p "–ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã (–∏–ª–∏ Enter –¥–ª—è –≤—Å–µ—Ö): " filename
                if [ -z "$filename" ]; then
                    git reset HEAD
                    echo -e "${GREEN}‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã —É–±—Ä–∞–Ω—ã –∏–∑ –∏–Ω–¥–µ–∫—Å–∞!${NC}"
                else
                    git reset HEAD "$filename"
                    echo -e "${GREEN}‚úÖ –§–∞–π–ª '$filename' —É–±—Ä–∞–Ω –∏–∑ –∏–Ω–¥–µ–∫—Å–∞!${NC}"
                fi
                ;;
            7) break ;;
            *) echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${NC}" ;;
        esac
        echo && read -p "–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å..."
    done
}

branch_operations() {
    while true; do
        echo -e "${YELLOW}=== –£–ü–†–ê–í–õ–ï–ù–ò–ï –í–ï–¢–ö–ê–ú–ò ===${NC}"
        echo "1. üåø –°–æ–∑–¥–∞—Ç—å –≤–µ—Ç–∫—É"
        echo "2. üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ –≤–µ—Ç–∫—É" 
        echo "3. üìã –°–ø–∏—Å–æ–∫ –≤–µ—Ç–æ–∫"
        echo "4. üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –≤–µ—Ç–∫—É"
        echo "5. ‚Ü©Ô∏è –ù–∞–∑–∞–¥"
        
        read -p "–í—ã–±–µ—Ä–∏—Ç–µ: " choice
        
        case $choice in
            1) 
                read -p "–ò–º—è –Ω–æ–≤–æ–π –≤–µ—Ç–∫–∏: " branch_name
                git checkout -b "$branch_name"
                echo -e "${GREEN}‚úÖ –í–µ—Ç–∫–∞ '$branch_name' —Å–æ–∑–¥–∞–Ω–∞!${NC}"
                ;;
            2)
                echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–µ—Ç–∫–∏:"
                git branch
                read -p "–ò–º—è –≤–µ—Ç–∫–∏: " branch_name
                git checkout "$branch_name"
                ;;
            3)
                echo -e "${GREEN}–õ–æ–∫–∞–ª—å–Ω—ã–µ –≤–µ—Ç–∫–∏:${NC}"
                git branch
                echo -e "${GREEN}–£–¥–∞–ª–µ–Ω–Ω—ã–µ –≤–µ—Ç–∫–∏:${NC}" 
                git branch -r
                ;;
            4)
                echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–µ—Ç–∫–∏:"
                git branch
                read -p "–ò–º—è –≤–µ—Ç–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: " branch_name
                git branch -d "$branch_name"
                ;;
            5) break ;;
            *) echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${NC}" ;;
        esac
        echo && read -p "–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å..."
    done
}

remote_operations() {
    while true; do
        echo -e "${YELLOW}=== –†–ê–ë–û–¢–ê –° GITHUB ===${NC}"
        echo "1. üì° –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ"
        echo "2. üöÄ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è (push)"
        echo "3. üì• –ü–æ–ª—É—á–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (pull)" 
        echo "4. ‚Ü©Ô∏è –ù–∞–∑–∞–¥"
        
        read -p "–í—ã–±–µ—Ä–∏—Ç–µ: " choice
        
        case $choice in
            1) 
                git remote -v
                echo ""
                echo -e "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ GitHub..."
                ssh -T git@github.com
                ;;
            2)
                current_branch=$(git branch --show-current)
                echo "–¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞: $current_branch"
                git push origin "$current_branch"
                ;;
            3)
                current_branch=$(git branch --show-current) 
                echo "–¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞: $current_branch"
                git pull origin "$current_branch"
                ;;
            4) break ;;
            *) echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${NC}" ;;
        esac
        echo && read -p "–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å..."
    done
}

quick_actions() {
    while true; do
        echo -e "${YELLOW}=== –ë–´–°–¢–†–´–ï –î–ï–ô–°–¢–í–ò–Ø ===${NC}"
        echo "1. üöÄ –°—Ç–∞—Ç—É—Å + –î–æ–±–∞–≤–∏—Ç—å + –ö–æ–º–º–∏—Ç + –ü—É—à"
        echo "2. üîÑ –û–±–Ω–æ–≤–∏—Ç—å –≤–µ—Ç–∫—É –∏–∑ GitHub"
        echo "3. üÜï –°–æ–∑–¥–∞—Ç—å feature –≤–µ—Ç–∫—É"
        echo "4. üìä –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
        echo "5. ‚Ü©Ô∏è –ù–∞–∑–∞–¥"
        
        read -p "–í—ã–±–µ—Ä–∏—Ç–µ: " choice
        
        case $choice in
            1)
                echo "=== –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô WORKFLOW ==="
                git status
                echo ""
                git add .
                read -p "–°–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞: " msg
                git commit -m "$msg"
                git push origin $(git branch --show-current)
                echo -e "${GREEN}‚úÖ –í–µ—Å—å workflow –≤—ã–ø–æ–ª–Ω–µ–Ω!${NC}"
                ;;
            2)
                current_branch=$(git branch --show-current)
                echo "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ—Ç–∫–∏: $current_branch"
                git pull origin "$current_branch"
                ;;
            3)
                read -p "–ò–º—è feature (–±–µ–∑ 'feature/'): " feature_name
                git checkout -b "feature/$feature_name"
                ;;
            4)
                echo "=== –°–¢–ê–¢–ò–°–¢–ò–ö–ê –†–ï–ü–û–ó–ò–¢–û–†–ò–Ø ==="
                echo "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–º–∏—Ç–æ–≤: $(git rev-list --count HEAD)"
                echo "–ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç: $(git log -1 --format=%cd --date=short)"
                echo "–ê–≤—Ç–æ—Ä: $(git log -1 --format=%an)"
                echo "–†–∞–∑–º–µ—Ä .git: $(du -sh .git | cut -f1)"
                ;;
            5) break ;;
            *) echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${NC}" ;;
        esac
        echo && read -p "–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å..."
    done
}

main_menu() {
    while true; do
        print_header
        show_info
        
        echo -e "${PURPLE}=== –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ ===${NC}"
        echo "1. üìù –û—Å–Ω–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏"
        echo "2. üåø –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç–∫–∞–º–∏" 
        echo "3. üì° –†–∞–±–æ—Ç–∞ —Å GitHub"
        echo "4. ‚ö° –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è"
        echo "5. üö™ –í—ã—Ö–æ–¥"
        echo ""
        
        read -p "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é [1-5]: " main_choice
        
        case $main_choice in
            1) basic_operations ;;
            2) branch_operations ;;
            3) remote_operations ;;
            4) quick_actions ;;
            5)
                echo -e "${GREEN}üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!${NC}"
                exit 0
                ;;
            *)
                echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"
                ;;
        esac
        
        echo ""
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å..."
    done
}

# –ó–∞–ø—É—Å–∫
if check_git_repo; then
    main_menu
else
    echo -e "${RED}–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –≤ –ø–∞–ø–∫–µ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è!${NC}"
    echo "–°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: git init"
    exit 1
fi
